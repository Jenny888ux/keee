# This is the complex Travis configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: false

language: generic

os:
  - osx
  - linux

env:
  - BUILD=stack ARGS="--resolver lts-11.5"
  - BUILD=stack ARGS="--resolver nightly-2018-04-20"
  - BUILD=stack ARGS="--resolver nightly"

allow_failures:
  - env: BUILD=stack ARGS="--resolver nightly"

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - libxcursor-dev
    - libxi-dev
    - libxinerama-dev
    - libxrandr-dev
    - libftgl-dev
    - libgmp-dev
    - libportaudio-dev
    - gcc-6

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

before_install:
- unset CC
- |
  if [[ $TRAVIS_OS_NAME == 'linux' ]]
  then
    CC=gcc-6 && CXX=g++-6
    sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-6 /usr/bin/gcc
    gcc --version
  fi
# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

  if [ "$CABALVER" != "1.16" ]
  then
    echo 'jobs: $ncpus' >> $HOME/.cabal/config
  fi
  echo "vDsp folder:"
  echo "$(ls /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A)"
  echo "vDsp folder 1:"
  echo "$(ls /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks)"
  echo "vDsp folder 2:"
  echo "$(ls /System/Library/Frameworks/Accelerate.framework/Versions/A)"
  echo "vDsp folder 3:"
  echo "$(ls /System/Library/Frameworks/Accelerate.framework/Versions)"
  echo "vDsp folder 4:"
  echo "$(ls /System/Library/Frameworks/Accelerate.framework)"
  echo "vDsp folder 5:"
  echo "$(ls /System/Library/Frameworks)"
  echo "vDsp folder 6:"
  echo "$(ls /System/Library)"

install:
- if [[ $TRAVIS_OS_NAME == 'osx' ]]; then brew bundle --verbose; fi
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies -j1
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --pedantic --bench --no-run-benchmarks --haddock --no-haddock-deps -j1
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests
        cabal build
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex
